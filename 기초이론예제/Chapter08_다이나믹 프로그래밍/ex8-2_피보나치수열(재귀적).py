# 예제 8-1의 수행시간이 기하급수적으로 늘어나는 문제를 해결하기 위한 방법

# 한 번에 계산된 결과를 메모제이션(Memozation)하기 위한 리스트 초기화
# 한 번 구한 피보나치 수열의 값은 리스트의 해당 칸에 저장해서 다시 계산되는 낭비를 막는다
d = [0]*100

# 피보나치 함수를 재귀함수로 구현 (탑다운 다이나믹 프로그래밍)
def fibo(x):
    # 피보나치 수열의 첫 번째, 두 번째 항은 1이다
    if x == 1 or x == 2:
        return 1
    
    # d[x]에 이미 계산된 피보나치 수열 값이 저장되어 있다면 해당 값을 리턴
    if d[x]!=0:
        return d[x]
    
    # 배열에 저장된 값이 없는 경우 
    d[x] = fibo(x-1) + fibo(x-2)
    return d[x]

print(fibo(99))